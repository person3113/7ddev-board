services:
  # MySQL 데이터베이스
  mysql:
    image: mysql:8.0
    container_name: board-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: board_db
      MYSQL_USER: board_user
      MYSQL_PASSWORD: board_password
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    networks:
      - board-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-proot_password"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  # Spring Boot 애플리케이션
  app:
    build: .
    container_name: board-app
    restart: unless-stopped
    environment:
      SPRING_PROFILES_ACTIVE: prod
      DB_USERNAME: board_user
      DB_PASSWORD: board_password
      DB_URL: jdbc:mysql://mysql:3306/board_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - app_logs:/app/logs
    networks:
      - board-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx (선택사항 - 리버스 프록시)
#  nginx:
#    image: nginx:alpine
#    container_name: board-nginx
#    restart: unless-stopped
#    ports:
#      - "80:80"
#      - "443:443"
#    volumes:
#      - ./nginx.conf:/etc/nginx/nginx.conf:ro
#      - ./ssl:/etc/nginx/ssl:ro
#    depends_on:
#      - app
#    networks:
#      - board-network

volumes:
  mysql_data:
    driver: local
  app_logs:
    driver: local

networks:
  board-network:
    driver: bridge
